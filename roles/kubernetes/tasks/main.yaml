---
- name: Install packages
  ansible.builtin.include_tasks:
    file: packages.yaml

- name: Ensure firewalld is running
  ansible.builtin.systemd:
    name: firewalld
    state: started
    enabled: true

- name: Set up Firewall for Kubernetes
  ansible.posix.firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
  notify: firewall-cmd-reload
  loop:
    - 6443
    - 10250

- name: Copy configuration files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/{{ item }}"
  loop:
    - etc/modules-load.d/k8s.conf
    - etc/sysctl.d/k8s.conf

- name: Add the dummy module and make sure it is loaded after reboots
  community.general.modprobe:
    name: "{{ item }}"
    state: present
    persistent: present
  loop:
    - br_netfilter
    - overlay

- name: Reload systectl
  ansible.builtin.shell:
    cmd: sysctl --system

- name: Install crio
  ansible.builtin.package:
    name: crio
    state: present
  when: container_runtime == "crio"


- name: Enable and start {{ container_runtime }} service
  ansible.builtin.systemd:
    name: "{{ container_runtime }}"
    daemon_reload: true
    state: started
    enabled: true

- name: Pull needed system container images for Kubernetes
  ansible.builtin.shell:
    cmd: kubeadm config images pull

- name: Enable and start kubernetes kubelet service
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    state: started
    enabled: true

- name: Bootstrap master node
  ansible.builtin.include_tasks:
    file: master.yaml
  when: inventory_hostname in groups['f8s']

- name: Bootstrap worker node
  ansible.builtin.include_tasks:
    file: worker.yaml
  when:
    - inventory_hostname in groups['workers']
    - join_command is defined

- name: Set labels on both worker nodes (run on f8s node)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Node
      metadata:
        name: "{{ item }}"
        labels:
          node-role.kubernetes.io/worker: ''
  loop: "{{ groups['workers'] }}"
  delegate_to: "{{ groups['f8s'][0] }}"
  when:
    - groups['workers'] | length > 0
    - join_command is defined

# - name: Set up nfs storage class
#   include_tasks: nfs.yaml
#   when: dedicated_nfs

- name: Make the kubeconfig easily accessible
  when: kubeconfig is defined
  block:
    - name: Print kubeconfig contents with steps on how to configure it locally
      ansible.builtin.debug:
        msg: |
          export KUBECONFIG={{ kubeconfig }}

    - name: Write kubeconfig to file on localhost
      ansible.builtin.copy:
        content: "{{ kubeconfig }}"
        dest: cluster.kubeconfig
      delegate_to: localhost
      become: false

    - name: Explain how to access the cluster
      ansible.builtin.debug:
        msg: |
          To access the cluster, run the following command:
          export KUBECONFIG={{ lookup('pipe','pwd') }}/cluster.kubeconfig
          kubectl get nodes
